'use strict';Object.defineProperty(exports,"__esModule",{value:true});exports.make_match_formula=make_match_formula;exports.default=void 0;var _HiddenSheet=require("./HiddenSheet");var _ColumnNames=_interopRequireDefault(require("./ColumnNames"));var _QueryBuilder=_interopRequireDefault(require("./QueryBuilder"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _readOnlyError(name){throw new Error("\""+name+"\" is read-only")}class SpreadsheetTable{constructor(options){this.spreadsheet=options.spreadsheet;this.sheet=options.sheet;this.options={};this.defaults={header_row:1,column_names:null,id_column:"A"};this.open(options.opts)}open(options){Object.assign(this.options,this.defaults,options);if(!this.options.column_names){this.options.column_names=this.getHeaderRow()}this.options.column_names=new _ColumnNames.default(this.options.column_names);this.query=new _QueryBuilder.default(this.options,this.spreadsheet,this.sheet)}getLastColumn(){return this.sheet.getLastColumn()}getLastRow(){return this.sheet.getLastRow()}getHeaderRow(){return this.getRowValues(this.options.header_row)}getIdProp(){return this.sheet.getRange(this.options.id_column+this.options.header_row).getValue()}getRowValues(row){try{var range=this.sheet.getRange(row,1,1,this.getLastColumn());var rows=range.getValues();return rows[0]}catch(e){return[]}}getDataJSON(){var range=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var datamx=[];if(!range){datamx=this.sheet.getDataRange().getValues()}else{datamx=this.sheet.getRange(range).getValues()}return this.options.column_names.makeJson(datamx,1)}findRowById(id){var column=this.options.id_column;var formula=make_match_formula(id,column,this.sheet.getName());var hidden_sheet=(0,_HiddenSheet.createHiddenSheet)(this.spreadsheet,this.sheet.getName()+"_search_sheet");var row=hidden_sheet.runFormula(formula);return row}getRowDataById(id){var row=this.findRowById(id);var result=this.getDataJSON(row+":"+row);if(result&&result.length){if(result.length==1){return result[0]}}return result}update(id,arg1,arg2){var row=this.findRowById(id);if(row<1)return false;if(typeof arg1==="string"){var[colName,colValue]=[arg1,arg2];var col=this.options.column_names.getColNumber(colName);if(col<1)return false;if(hasValue(colValue)&&typeof colValue!=="string"){colValue=(_readOnlyError("colValue"),JSON.stringify(colValue))}this.sheet.getRange(row,col,1).setValue(colValue)}else{var obj=arg1;var rowVal=this.getRowValues(row);for(var key in obj){var _col=this.options.column_names.getColNumber(key);if(_col<1)continue;if(hasValue(obj[key])&&typeof obj[key]!=="string"){obj[key]=JSON.stringify(obj[key])}rowVal[_col-1]=obj[key]}this.sheet.getRange(row,1,1,this.getLastColumn()).setValues([rowVal])}return true}insert(rec){if(!rec)throw"Nothing to insert";for(var key in rec){rec[key]=rec[key].toISOString()}var row=this.options.column_names.jsonToRow(rec);this.sheet.appendRow(row);return true}delete(id){var row=this.findRowById(id);if(row<1)return false;this.sheet.deleteRow(row);return true}}function hasValue(value){return value||value!==undefined&&value!==null}function make_match_formula(needle,col,sheet_name){var colref="'"+sheet_name+"'!"+col+":"+col;var formula="MATCH(".concat(JSON.stringify(needle),", ").concat(colref,", 0)");return formula}var _default=SpreadsheetTable;exports.default=_default;