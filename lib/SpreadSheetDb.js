'use strict';Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _SpreadSheetApp=_interopRequireWildcard(require("./SpreadSheetApp"));var _SpreadSheetJoint=_interopRequireDefault(require("./SpreadSheetJoint"));var _SpreadSheetTable=_interopRequireDefault(require("./SpreadSheetTable"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(){if(typeof WeakMap!=="function")return null;var cache=new WeakMap;_getRequireWildcardCache=function _getRequireWildcardCache(){return cache};return cache}function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj}if(obj===null||typeof obj!=="object"&&typeof obj!=="function"){return{default:obj}}var cache=_getRequireWildcardCache();if(cache&&cache.has(obj)){return cache.get(obj)}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc)}else{newObj[key]=obj[key]}}}newObj.default=obj;if(cache){cache.set(obj,newObj)}return newObj}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable});keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key])})}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source))}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}}return target}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}class SpreadSheetDB{constructor(options){this.spreadsheet=null;this.sheetTables={};this.options={};this.defaults={header_row:1,id_column:"A",spreadsheetId:null,sheetSpecs:{},init:null};this.open(options)}open(options){Object.assign(this.options,this.defaults,options);if(!this.options.spreadsheetId)return;var init=this.options.init;if(typeof init!=="boolean"){var _scriptCache=CacheService.getScriptCache();init=JSON.parse(_scriptCache.get("init"+this.options.spreadsheetId));if(typeof init!=="boolean"){init=true;_scriptCache.put("init"+this.options.spreadsheetId,"true")}}var scriptCache=CacheService.getScriptCache();var spreadsheetId=this.options.spreadsheetId;if(!init){var cached=JSON.parse(scriptCache.get("cached"+spreadsheetId));if(cached){this.spreadsheet=new _SpreadSheetApp.default(this.options.accessToken).openByData(cached)}}if(!this.spreadsheet){this.spreadsheet=new _SpreadSheetApp.default(this.options.accessToken).openById(spreadsheetId);if(!init){scriptCache.put("cached"+spreadsheetId,JSON.stringify(_objectSpread({},this.spreadsheet.data,{properties:{}})),21600)}}if(!init||!this.spreadsheet)return;console.log("spreadsheet reinit");var sheetNames=this.spreadsheet.getSheets().map(s=>s.getName());for(var sheetName in this.options.sheetSpecs){if(sheetNames.includes(sheetName))continue;var sheetSpec=this.options.sheetSpecs[sheetName];var newSheet=this.spreadsheet.insertSheet(sheetName);if(Array.isArray(sheetSpec[0])){for(var row of sheetSpec){newSheet.appendRow(row)}}else{newSheet.appendRow(sheetSpec)}}this.spreadsheet=new _SpreadSheetApp.default(this.options.accessToken).openById(spreadsheetId);scriptCache.put("cached"+spreadsheetId,JSON.stringify(_objectSpread({},this.spreadsheet.data,{properties:{}})),21600);scriptCache.put("init"+this.options.spreadsheetId,"false",21600)}from(sheetName){return new _SpreadSheetTable.default({spreadsheet:this.spreadsheet,sheet:this.spreadsheet.getSheetByName(sheetName),opts:{column_names:getColumnNames(this.options.sheetSpecs[sheetName])}})}join(sheetName1,sheetName2,joinKey,joinProp){return new _SpreadSheetJoint.default(this.from(sheetName1),this.from(sheetName2),joinKey,joinProp)}}var _default=SpreadSheetDB;exports.default=_default;function getColumnNames(sheetSpec){if(!Array.isArray(sheetSpec))return sheetSpec;return Array.isArray(sheetSpec[0])?sheetSpec[0]:sheetSpec}